[
  
  {
    "title": "자료구조 - 이중 연결 리스트(Doubly Linked List)",
    "url": "/posts/Doubly-Linked-List/",
    "categories": "Data Structure",
    "tags": "Data Structure",
    "date": "2021-02-21 08:45:00 +0900",
    





    "snippet": "  프로그래머스 - 어서와! 자료구조와 알고리즘은 처음이지?를 공부하며 정리한 내용입니다.10강. 양방향(이중) 연결 리스트양방향(이중) 연결 리스트는 노드끼리 서로 연결되어 있는 리스트를 의미한다.일반적인 연결 리스트는 한 방향으로(head에서 tail로)만 진행된다면, 양방향 연결 리스트는 앞, 뒤로도 진행이 가능하다.그래서 노드를 생성할 때, prev에 대한 정보를 함께 포함하게 된다.그리고 dummy 노드를 리스트 처음과 끝에 모두 두어야 데이터를 담고 있는 노드들은 모두 같은 형태를 띄고, 다양한 기능을 구현하는데 있..."
  },
  
  {
    "title": "자료구조 - dummy head를 가지는 연결 리스트(Linked Lists) 노드 삭제",
    "url": "/posts/Linked-List-Node-Pop-After/",
    "categories": "Data Structure",
    "tags": "Data Structure",
    "date": "2021-02-14 14:54:00 +0900",
    





    "snippet": "  프로그래머스 - 어서와! 자료구조와 알고리즘은 처음이지?를 공부하며 정리한 내용입니다.9강. dummy head를 가지는 연결 리스트 노드 삭제연습문제  제 9 강에서 소개된 추상적 자료구조 LinkedList 는 dummy head node 를 가지는 연결 리스트입니다. 이 클래스의 아래와 같은 메서드들을, 강의 내용에 소개된 요구조건을 만족시키도록 구현하세요.  popAfter()popAt()    이 때, popAt() 메서드의 구현에서는 popAfter() 를 호출하여 이용하도록 합니다. (그렇게 하지 않을 수도 있..."
  },
  
  {
    "title": "Javascript - 시,분,초 D-Day 실시간 계산기 만들기",
    "url": "/posts/Javascript-Dday/",
    "categories": "Javascript",
    "tags": "Javascript",
    "date": "2021-02-10 20:24:00 +0900",
    





    "snippet": "우선 javascript에서 시간을 계산하는 방법은 다음과 같다.  Javascript의 getTime() 메소드는 현재 시간을 1970년 1월 1일 이후로부터 경과한 시간을 millisecond(ms) 단위로 계산을 한다.  1초 = 1000ms 이라는 점을 활용하면 일, 시, 분, 초까지 구할 수 있다.          초 : 1ms * 1000는 1초      분 : 1ms * 1000가 1초니까 여기서 60을 곱하면 1분      시 : 1ms * 1000 * 60은 1분이니까, 60을 곱하면 1시간      일 : 1..."
  },
  
  {
    "title": "Javascript - EventHandler를 object에 넣기",
    "url": "/posts/Javascript-EventHandler/",
    "categories": "Javascript",
    "tags": "Javascript",
    "date": "2021-02-10 20:24:00 +0900",
    





    "snippet": "const로 정의한 object에 handler를 저장하고, 이를 외부에서 실행하는 방법은 다음과 같다.let text = document.querySelector(&quot;body h2&quot;);const Handler = {    mouserOver: function(){        text.innerHTML = &quot;Mouse is on&quot;        text.style.color = &quot;#ff9999&quot;    }}function init(){    text.addEventListner..."
  },
  
  {
    "title": "자료구조 - 연결 리스트(Linked Lists) 노드 삭제",
    "url": "/posts/Linked-List-Node-Pop/",
    "categories": "Data Structure",
    "tags": "Data Structure",
    "date": "2021-02-08 09:00:00 +0900",
    





    "snippet": "  프로그래머스 - 어서와! 자료구조와 알고리즘은 처음이지?를 공부하며 정리한 내용입니다.8강. 연결 리스트 노드 삭제하기연습문제  제 8 강에서 소개된 추상적 자료구조 LinkedList 클래스의 메서드로서 popAt() 메서드를 강의 내용에 소개된 요구조건을 만족시키도록 구현하세요.초기 코드로 들어 있는 것은 solution() 함수를 포함하여 다른 부분은 수정하지 말고, def popAt(self, pos): 의 메서드 몸체만 구현하세요.만약, 인자로 주어진 pos 가 올바른 범위의 값을 가지지 않는 경우에는 IndexE..."
  },
  
  {
    "title": "자료구조 - 연결 리스트(Linked Lists)",
    "url": "/posts/Linked-List/",
    "categories": "Data Structure",
    "tags": "Data Structure",
    "date": "2021-02-07 09:00:00 +0900",
    





    "snippet": "  프로그래머스 - 어서와! 자료구조와 알고리즘은 처음이지?를 공부하며 정리한 내용입니다.7강. 연결 리스트(Linked Lists)연결 리스트(Linked List)는 선형 구조 리스트 한 종류이다. 연결 리스트는 선형 리스트와는 달리 순서가 차례대로 늘어서있는 것이 아니라, 앞에 있는 데이터가 뒤에 이어지는 데이터를 가리키는 형태로 구성되어있다.선형 리스트와 비교            항목      배열      연결 리스트                  저장 공간      연속한 위치      임의의 위치          ..."
  },
  
  {
    "title": "Git branch 병합(merge)",
    "url": "/posts/git-branch-merge/",
    "categories": "git",
    "tags": "git",
    "date": "2021-02-03 09:54:00 +0900",
    





    "snippet": "  생활코딩 - 지옥에서 온 Git을 공부하며 정리한 내용입니다.Git branch 병합하기(git merge)        출처 : https://light-tree.tistory.com/230각각의 branch로 나누어 작업을 하다가 하나로 통합해야 하는 순간이 찾아오는데, 이때 사용하는 명령어가 git merge이다.프론트엔드와 백엔드를 나누어 작업을 하고, 기능 테스트를 위해 통합하는 경우가 대표적인 사례이다. 조금 더 쉬운 사례로는 조별과제로 PPT를 분담해서 작성하다가 하나로 합치는 것으로 이해할 수 있다.이때, 서..."
  },
  
  {
    "title": "github.io에 Jekyll Theme(Chirpy)를 적용해보자",
    "url": "/posts/how-to-build-jekyll-blog/",
    "categories": "github",
    "tags": "github, jekyll",
    "date": "2021-02-03 08:45:00 +0900",
    





    "snippet": "0. 들어가며개발 공부를 하면서 공부한 것들을 정리하지 않으면 금세 날아가 버린다는 것을 느끼고 있었다. 강의를 듣고 배우기는 했어도, 남들에게 설명해보라고 하면 쉽게 할 수 없는 그런 상태였다. 다시 말해, 수동적으로 강의를 듣고 마치 내가 모든 것을 다 안다는 착각에 빠져있었던 것이다.        교수님께 애정을 담은 편지를 써볼까 진지하게 고민도 해봤었다.학습의 효과는 강의를 듣기만 하는 것보다 소리를 내어 말하는 것이 좋고, 가장 좋은 방법은 누군가를 가르칠 때 가장 큰 효과를 보인다고 한다. 그래서 이 블로그에는 개..."
  },
  
  {
    "title": "Git에 대해 간단히 알아보자",
    "url": "/posts/what-is-git/",
    "categories": "git",
    "tags": "git",
    "date": "2021-01-23 09:00:00 +0900",
    





    "snippet": "  생활코딩 - 지옥에서 온 Git을 공부하며 정리한 내용입니다.Git이란?Git은 Version Control System(VCS)의 한 종류이다. 버전 관리 시스템은 특정 시점의 파일 내부 내용의 상태를 저장하여 복원을 하거나 오류를 수정하는 기능을 수행한다. 또한, 다른 사람들과 파일 공유를 하며 작업이 가능하므로 효율적인 협업을 도와준다.Version Control System종류버전 관리 시스템은 여러 종류가 있는데, 대표적으로 CVS, SVN, GIT이 있다. 현재 CVS는 자주 쓰이지 않으며, SVN을 대체하기 위..."
  },
  
  {
    "title": "GET과 POST 방식의 차이 및 비교",
    "url": "/posts/Comparison-of-GET-POST/",
    "categories": "html",
    "tags": "html",
    "date": "2021-01-16 09:00:00 +0900",
    





    "snippet": "GET과 POST 방식웹 개발을 하면 &amp;lt;form&amp;gt; 태그의 속성으로 method를 설정해주어야 하는데, 크게 GET 방식과 POST 방식으로 나뉜다.간단하고 쉽게 요약을 하자면, GET 방식은 서버에서 정보를 조회할 때 주로 쓰이고, POST 방식은 정보를 수정하거나 입력할 때 사용한다.자세하게 이를 이해하기 위해서는 HTTP에 대한 이해가 필요하다. 본 문서에서는 네트워크에 대해 자세히 다루지는 않지만, 전반적인 내용을 담기 위해 노력했다.HTTP(HyperText Transfer Protocol)HT..."
  },
  
  {
    "title": "HTML 기초 태그 정리",
    "url": "/posts/HTML-basic-tag/",
    "categories": "html",
    "tags": "html",
    "date": "2021-01-16 09:00:00 +0900",
    





    "snippet": "  생활코딩 - HTML을 공부하며 정리한 내용입니다.HTML 문법본 포스팅에서는 HTML 태그에 대해 전부 설명하지 않았습니다.복습을 하면서 필요한 내용만 기록해놓았으므로, 이 점 참고하셔서 읽어주시면 감사하겠습니다.&amp;lt;a&amp;gt;태그a태그는 anchor(닻)의 맨 앞글자인 a를 의미한다. 즉, 특정 URL에 연결되어 있다는 것으로 해석할 수 있다.&amp;lt;a href=&quot;연결할 링크&quot; target=&quot;_속성값&quot; title=&quot;hover시 표시되는 문구&quot;&..."
  },
  
  {
    "title": "Comparison Of Get Post",
    "url": "/posts/Comparison-of-GET-POST/",
    "categories": "",
    "tags": "",
    "date": "2021-01-16 00:00:00 +0900",
    





    "snippet": "GET과 POST 방식웹 개발을 하면 &amp;lt;form&amp;gt; 태그의 속성으로 method를 설정해주어야 하는데, 크게 GET 방식과 POST 방식으로 나뉜다.간단하고 쉽게 요약을 하자면, GET 방식은 서버에서 정보를 조회할 때 주로 쓰이고, POST 방식은 정보를 수정하거나 입력할 때 사용한다.자세하게 이를 이해하기 위해서는 HTTP에 대한 이해가 필요하다. 본 문서에서는 네트워크에 대해 자세히 다루지는 않지만, 전반적인 내용을 담기 위해 노력했다.HTTP(HyperText Transfer Protocol)HT..."
  },
  
  {
    "title": "HTML이란 무엇일까?",
    "url": "/posts/what-is-HTML/",
    "categories": "html",
    "tags": "html",
    "date": "2021-01-15 09:00:00 +0900",
    





    "snippet": "  생활코딩 - HTML을 공부하며 정리한 내용입니다.HTML(HyperText Markup Language)HTML은 3가지로 구성되어 있다.  Hypertext : 하이퍼텍스트를 가장 중요한 특징으로 한다.          하이퍼텍스트란 문서와 문서가 링크로 연결되어있다는 것을 의미한다.        Markup : 마크업이라는 형식을 가진          Markup이 있다면 Markdown도 있는데, 현재 작성하고 있는 문서가 Markdown이다. 둘의 개념에 대해서는 나중에 다룰 예정이다.        Language..."
  }
  
]

