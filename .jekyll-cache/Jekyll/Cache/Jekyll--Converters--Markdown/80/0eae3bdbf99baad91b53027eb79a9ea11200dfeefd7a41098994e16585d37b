I"K<blockquote>
  <p><a href="https://opentutorials.org/course/2708">생활코딩 - 지옥에서 온 Git</a>을 공부하며 정리한 내용입니다.</p>
</blockquote>

<h1 id="git이란">Git이란?</h1>

<p>Git은 <code class="language-plaintext highlighter-rouge">Version Control System(VCS)</code>의 한 종류이다. <code class="language-plaintext highlighter-rouge">버전 관리 시스템</code>은 특정 시점의 파일 내부 내용의 상태를 저장하여 복원을 하거나 오류를 수정하는 기능을 수행한다. 또한, 다른 사람들과 파일 공유를 하며 작업이 가능하므로 효율적인 협업을 도와준다.</p>

<h1 id="version-control-system">Version Control System</h1>

<h2 id="종류">종류</h2>

<p>버전 관리 시스템은 여러 종류가 있는데, 대표적으로 <code class="language-plaintext highlighter-rouge">CVS</code>, <code class="language-plaintext highlighter-rouge">SVN</code>, <code class="language-plaintext highlighter-rouge">GIT</code>이 있다. 현재 <code class="language-plaintext highlighter-rouge">CVS</code>는 자주 쓰이지 않으며, <code class="language-plaintext highlighter-rouge">SVN</code>을 대체하기 위해 나타난 것이 <code class="language-plaintext highlighter-rouge">GIT</code>이라 생각하면 된다. 그럼에도 <code class="language-plaintext highlighter-rouge">SVN</code>은 현업에서 여전히 많이 쓰이고 있는 시스템이다.</p>

<p>한편, 버전 관리 시스템은 개발자만의 전유물은 아니다. <code class="language-plaintext highlighter-rouge">Google Drive</code>나 <code class="language-plaintext highlighter-rouge">Dropbox</code>와 같은 클라우드 서비스도 이에 해당한다. 물론 개발자가 사용하는 버전 관리와는 결이 다르지만, 본질적으로는 <code class="language-plaintext highlighter-rouge">파일을 쉽게 관리할 수 있다</code>는 것이다.</p>

<h2 id="기능">기능</h2>

<p>버전 관리 시스템의 기능으로는 다음과 같이 3가지가 존재한다.</p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">Backup(백업)</code> : 파일이 날라갔을 때 최근부터 다시 시작할 수 있도록 도와줌</li>
  <li><code class="language-plaintext highlighter-rouge">Recovery(복구)</code> : 이전 상태로 돌아가고 싶을 때 특정 시점으로 돌아갈 수 있도록 도와줌</li>
  <li><code class="language-plaintext highlighter-rouge">Collaboration(협업)</code> : 다른 사람과의 개발을 효과적으로 관리하도록 도와줌</li>
</ol>

<h1 id="주요-명령어">주요 명령어</h1>

<p>해당 명령어들은 <code class="language-plaintext highlighter-rouge">cmd</code>에서 주로 사용하는 명령어이고, <code class="language-plaintext highlighter-rouge">git</code> 관련 명령어는 추후에 이어지는 포스팅에서 다루어보도록 하겠다.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">ls -al</code> : 현재 디렉토리에 있는 모든 파일들을 보여준다.</li>
  <li><code class="language-plaintext highlighter-rouge">pwd</code> : 현재 어느 디렉토리에 있는지 보여준다.</li>
  <li><code class="language-plaintext highlighter-rouge">cd 경로</code> : 이동하고자 하는 경로로 이동한다.
    <ul>
      <li>ex) <code class="language-plaintext highlighter-rouge">$ cd C:\Users\workspace\github\TIL\Git</code></li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">mkdir 폴더이름</code> : 현재 디렉토리에서 입력한 폴더 이름을 생성한다.</li>
  <li><code class="language-plaintext highlighter-rouge">Ctrl + Insert</code> : CMD창에서 선택한 영역을 복사한다.</li>
  <li><code class="language-plaintext highlighter-rouge">Shift + Insert</code> : 복사한 내용을 붙여넣는다.</li>
  <li><code class="language-plaintext highlighter-rouge">vim 파일이름.확장자명</code> : 현재 디렉토리에서 파일을 생성하거나, 해당 파일을 수정한다.
Ex) <code class="language-plaintext highlighter-rouge">vim hello_git.txt</code> : <code class="language-plaintext highlighter-rouge">hello_git.txt</code>파일을 생성한다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">i</code>(insert) : 위의 명령어를 입력하고 키보드에서 <code class="language-plaintext highlighter-rouge">i</code>를 누르면 내용 편집이 가능해진다.</li>
      <li><code class="language-plaintext highlighter-rouge">esc</code>(escape) : 현재 작업에서 나온다.</li>
      <li><code class="language-plaintext highlighter-rouge">:wq</code>(write and quit) : 현재 작성한 내용을 저장하고 종료한다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">cat 파일이름.확장자명</code> : 현재 디렉토리에서 파일의 내용을 조회한다.</li>
</ul>
:ET